enum WorkoutSliceType {
  SINGLE
  MULTIPLE
}

type WorkoutSlice {
  type: WorkoutSliceType
  id: ID
}

type Workout @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  name: String!
  date: AWSDate!
  workoutSlices: [WorkoutSlice!]
  MultipleExercisesSlices: [MultipleExercisesSlice]
    @hasMany(indexName: "byWorkout", fields: ["id"])
  SingleExerciseSlices: [SingleExerciseSlice]
    @hasMany(indexName: "byWorkout", fields: ["id"])
}

type LoadUnit @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  name: String
}

type MultipleExercisesSlice @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  workoutID: ID! @index(name: "byWorkout")
}

type Set @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  weigth: Int
  load: Int
  rpe: Int
  Exercise: Exercise @hasOne
  setgroupID: ID! @index(name: "bySet")
  singleexercisesliceID: ID! @index(name: "bySingleExerciseSlice")
}

type Exercise @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  name: String!
  description: String
  LoadUnit: LoadUnit @hasOne
}

type SingleExerciseSlice @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  restTime: Int
  Sets: [Set] @hasMany(indexName: "bySingleExerciseSlice", fields: ["id"])
  workoutID: ID! @index(name: "byWorkout")
}
